name: API CI/CD Workflow

on:
  push: # Pushes to main & master are used for deploying to staging.
    branches: [ main, master ]
  release: # GitHub Releases are used for deploying to production.
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Determine image name & tag
      run: |
        if [ "$GITHUB_EVENT_NAME" == "release" ]; then
          export IMAGE_TAG=${GITHUB_REF##*/}
        else
          export IMAGE_TAG=$(git rev-parse "$GITHUB_SHA") # TODO: Removed --short cause it doesn't work with Argo
        fi
        export GITHUB_REPOSITORY_LOWER=$(echo $GITHUB_REPOSITORY | awk '{print tolower($0)}')
        export IMAGE_NAME="ghcr.io/$GITHUB_REPOSITORY_LOWER"
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        echo "Building $IMAGE_NAME:$IMAGE_TAG"
    - name: Build & push API Docker image
      run: |
        docker build . --file Dockerfile --tag $IMAGE_NAME:$IMAGE_TAG
        docker push $IMAGE_NAME:$IMAGE_TAG
    - name: Tag & push image as latest staging image
      if: github.event_name != 'release'
      run: |
        docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:staging
        docker push $IMAGE_NAME:staging
    - name: Tag & push image as latest production image
      if: github.event_name == 'release'
      run: |
        docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:production
        docker push $IMAGE_NAME:production
